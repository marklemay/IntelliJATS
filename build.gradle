buildscript {
    ext.kotlin_version = '1.1.2-2'
    repositories {
        mavenCentral()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }

        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.github.hurricup:gradle-grammar-kit-plugin:354bb8c477"
    }

//    dependencies {
//        classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.2.9"
//    }
}

//apply plugin: "org.jetbrains.intellij"
plugins {
    id "org.jetbrains.intellij" version "0.2.9"
    id "org.jetbrains.kotlin.jvm" version "1.1.1"
}

group 'com.atslangplugin'
//id 'IntelliJATS'
version '1.1-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
idea {
    module {
        downloadSources = true
        generatedSourceDirs += file('src/gen/java')
    }
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

sourceCompatibility = 1.8
targetCompatibility = 1.8



apply plugin: 'org.jetbrains.grammarkit'
grammarKit {
//    grammarKitRelease = '1.5.1'
    grammarKitTargetRoot = 'src/gen/java'
    purgeOldFiles = false //todo: muliple generated locations for better cleaning?
}


import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser


//todo: delete?
repositories {
    mavenCentral()
}

dependencies {

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}


sourceSets {
    main {
        java {
            //TODO: sources should be generated as part of the build!
            //TODO: need to figure out ho to hook ATS up to this, perhaps package as a resource???
            srcDirs = ['src/main/java', 'src/gen/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

//apply plugin: 'idea'
//apply plugin: 'org.jetbrains.intellij'

intellij {
    version '2017.1.2'
    //IntelliJ IDEA 2016.3 dependency; for a full list of IntelliJ IDEA releases please see https://www.jetbrains.com/intellij-repository/releases
//https://www.jetbrains.com/intellij-repository/releases

    //Bundled plugin dependencies
    plugins['org.intellij.plugins.markdown:8.5.0.20160208']
//    plugins ['name.kropp.intellij.makefile:1.1']
//    plugins 'gradle' if we need to build with gradle
    pluginName 'yet_another_plugin'
}




task generateATSLexer(type: GenerateLexer) {
    // source flex file
    source "src/main/grammar/ATS.flex"

    // target directory for lexer
    targetDir "src/gen/java/com/atslangplugin"

    // target classname, target file will be targetDir/targetClass.java
    targetClass "ATSLexer"

    // optional, path to the task-specific skeleton file. Default: none
//    skeleton = '/some/specific/skeleton'

    // if set, plugin will remove a lexer output file before generating new one. Default: false
//    purgeOldFiles true
}


task generateATSParser(type: GenerateParser) {
    // source  file
    source "src/main/grammar/ATS.bnf"

    // optional, task-specific root for the generated files. Default: none
    targetRoot 'src/gen/java'

    // path to a parser file, relative to the targetRoot
    pathToParser '/com/atslangplugin/ATSLexer.java'

    // path to a directory with generated psi files, relative to the targetRoot
    pathToPsiRoot '/com/atslangplugin/psi'

    // if set, plugin will remove a parser output file and psi output directory before generating new ones. Default: false
//    purgeOldFiles true
}

//compileKotlin.dependsOn generateATSLexer